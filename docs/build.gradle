buildscript {
    repositories {
        maven { url 'https://repo.grails.org/grails/core' }
    }
    dependencies {
        classpath 'org.asciidoctor:asciidoctor-gradle-jvm:3.3.2'
        classpath "org.asciidoctor:asciidoctor-gradle-jvm-epub:4.0.1"
        classpath "org.asciidoctor:asciidoctor-gradle-jvm-pdf:3.3.2"
        classpath "org.asciidoctor:asciidoctor-gradle-jvm-gems:3.3.2"
    }
}

apply plugin: "org.asciidoctor.jvm.gems"
apply plugin: 'org.asciidoctor.jvm.convert'
apply plugin: "org.asciidoctor.jvm.pdf"
apply plugin: "org.asciidoctor.jvm.epub"

def asciidoctorAttributes = [
        copyright           : 'Apache License, Version 2.0',
        docinfo1            : 'true',
        doctype             : 'book',
        encoding            : 'utf-8',
        icons               : 'font',
        id                  : project.name + ':' + projectVersion,
        idprefix            : '',
        idseparator         : '-',
        lang                : 'en',
        linkattrs           : true,
        numbered            : '',
        producer            : 'Asciidoctor',
        revnumber           : projectVersion,
        setanchors          : true,
        'source-highlighter' : 'prettify',
        toc                 : 'left',
        toc2                : '',
        toclevels           : '2',
        projectVersion      : project.projectVersion,
        threeZeroXProjectVersion: project.threeZeroXProjectVersion
]

repositories {
    mavenCentral()
    maven { url 'https://repo.grails.org/grails/core' }
    ruby.gems()
}

dependencies {
    asciidoctorGems 'rubygems:rouge:3.15.0'
}


asciidoctor {
    sourceDir file('src/docs')
    sources {
        include 'index.adoc'
    }
    outputDir = new File(buildDir, 'docs')
    attributes asciidoctorAttributes
}

asciidoctorPdf {
    dependsOn asciidoctorGemsPrepare
    sourceDir = file('src/docs')
    sources {
        include 'index.adoc'
    }
    outputDir = new File(buildDir, 'docs')

    asciidoctorj {
        requires 'rouge'
        attributes asciidoctorAttributes
    }
}

asciidoctorEpub {
    dependsOn asciidoctorGemsPrepare
    sourceDir = file('src/docs')
    sources {
        include 'index.adoc'
    }
    outputDir = new File(buildDir, 'docs')

    asciidoctorj {
        requires 'rouge'
        attributes asciidoctorAttributes
    }

    ebookFormats = ["EPUB3"]
}

tasks.named("asciidoctor").configure {
    dependsOn = ['asciidoctorPdf', 'asciidoctorEpub']
}

tasks.register("docs") {
    group = "documentation"
    dependsOn = ["asciidoctor"]
    doLast {
        File dir = new File(buildDir, 'docs')
        ['epub', 'pdf'].each { String ext ->
            File f = new File(dir, 'index.' + ext)
            if (f.exists()) {
                f.renameTo new File(dir, project.name + '.' + ext)
            }
        }

        new File(buildDir, 'docs/ghpages.html') << file('src/docs/index.tmpl').text.replaceAll('@VERSION@', project.version)

        copy {
            from 'src/docs'
            into new File(buildDir, 'docs').path
            include '**/*.png'
        }
    }
}